{"version":3,"file":"static/js/986.9b36028a.chunk.js","mappings":"6MAQA,MAgPA,EAhPmBA,KACjB,MAAM,UAAEC,IAAcC,EAAAA,EAAAA,YAAWC,EAAAA,IAC1BC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,KACtCC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,KAC5BG,EAAMC,IAAWJ,EAAAA,EAAAA,UAAS,KAC1BK,EAAMC,IAAWN,EAAAA,EAAAA,UAAS,KAC1BO,EAAOC,IAAYR,EAAAA,EAAAA,UAAS,KAC5BS,EAAUC,IAAeV,EAAAA,EAAAA,WAAS,IAClCW,EAAIC,IAASZ,EAAAA,EAAAA,UAAS,IAGvBa,EAAkBC,UACtBf,EAAc,IACdS,EAAS,IACTO,EAAEC,iBACFR,EAAS,IACT,IACE,MAAMS,QAAiBC,EAAAA,EAAMC,IAAK,eAAclB,KAASE,KAAQE,KAEjEO,EAAMK,EAASG,KAAKC,KACpBtB,EAAckB,EAASG,KAAKtB,YAC5BY,GAAY,EACd,CAAE,MAAOY,GAGP,GAFAd,EAASc,GAEmB,MAAxBA,EAAIL,SAASM,OAAgB,CAC/B,MAEMC,SAFiBN,EAAAA,EAAMC,IAAI,SAAWlB,IAElBmB,KAAKI,SAC/BA,EAASC,SAASC,IAChBC,OAAOC,OAAOF,EAAS,CAAEG,SAAS,GAAO,IAE3C9B,EAAcyB,GACdd,GAAY,EACd,CACF,GAyDIoB,EAAoBf,IAGxB,MAAMgB,EAAQC,SAASjB,EAAEkB,OAAOtB,IAC1BuB,EAAapC,EAAWiC,GAC9BG,EAAWL,SAAWK,EAAWL,QACjC,MAAMM,EAAgBrC,EAAWsC,KAAI,CAACV,EAASK,KAC/BC,SAASjB,EAAEkB,OAAOtB,IAAYe,KAG9C3B,EAAcoC,EAAc,EAG9B,OACEE,EAAAA,EAAAA,MAAA,QAAMC,UAAU,aAAYC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8KAA6KC,SAAC,gBAG5LC,EAAAA,EAAAA,KAAA,WAASF,UAAU,mBAAkBC,UACnCF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,0CAAyCC,SAAA,EACvDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,MAAMG,QAAQ,QAAOF,SAAC,kBAGvCF,EAAAA,EAAAA,MAAA,UACEC,UAAU,yPACVI,KAAK,QACL/B,GAAG,QACHgC,MAAO1C,EACP2C,UAAQ,EACRC,SAAW9B,GAAMb,EAASa,EAAEkB,OAAOU,OAAOJ,SAAA,EAE1CC,EAAAA,EAAAA,KAAA,UAAQM,cAAY,EAACC,QAAM,EAAAR,SAAC,QAG3B5C,EAAUyC,KAAI,CAACnC,EAAO8B,KACrBS,EAAAA,EAAAA,KAAA,UAAoBG,MAAO1C,EAAMoB,IAAIkB,SAClCtC,EAAMA,OADI8B,YAMnBM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,MAAMG,QAAQ,OAAMF,SAAC,iBAGtCC,EAAAA,EAAAA,KAAA,SACEF,UAAU,8PACV3B,GAAG,OACHqC,KAAK,OACLN,KAAK,OACLC,MAAOxC,EACP0C,SAAW9B,GAAMX,EAAQW,EAAEkB,OAAOU,aAGtCN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,MAAMG,QAAQ,OAAMF,SAAC,iBAItCF,EAAAA,EAAAA,MAAA,UACEC,UAAU,wPACVI,KAAK,OACL/B,GAAG,OACHgC,MAAOtC,EACPuC,UAAQ,EACRC,SAAW9B,GAAMT,EAAQS,EAAEkB,OAAOU,OAAOJ,SAAA,EAEzCC,EAAAA,EAAAA,KAAA,UAAQM,cAAY,EAACC,QAAM,EAAAR,SAAC,SAG5BC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,IAAGJ,SAAC,OAClBC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,IAAGJ,SAAC,QAClBC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,IAAGJ,SAAC,SAClBC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,IAAGJ,SAAC,QAClBC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,IAAGJ,SAAC,aAGtBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,UAC7BC,EAAAA,EAAAA,KAAA,UACEF,UAAU,6SACVU,KAAK,SACLC,QAAUlC,GAAMF,EAAgBE,GAAGwB,SACpC,kBAMPC,EAAAA,EAAAA,KAAA,OAAAD,SAAMhC,GAAQiC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAAC3C,MAAOA,IAAY,MAC7CiC,EAAAA,EAAAA,KAAA,WAASF,UAAU,mBAAkBC,UACnCF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,SAAQC,SAAA,CACX,OAAVzC,QAAU,IAAVA,GAAAA,EAAYqD,QACXX,EAAAA,EAAAA,KAAA,OAAKF,UAAU,+FAA8FC,UAC3GF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,SAAQC,SAAA,EACvBC,EAAAA,EAAAA,KAACY,EAAAA,EAAW,CAACC,QAAS,CAAC,UAAW,cAClCb,EAAAA,EAAAA,KAAA,SAAAD,SACa,OAAVzC,QAAU,IAAVA,OAAU,EAAVA,EAAYsC,KAAI,CAACV,EAASK,KACzBS,EAAAA,EAAAA,KAACc,EAAAA,EAAe,CAEdC,KAAMxB,EACNtB,SAAUA,EACVkC,MAAOjB,EACPI,iBAAkBA,GAJbC,YAWf,GAEDjC,EAAWqD,QAAU1C,GACpB4B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,MAAA,UACEW,KAAK,SACLV,UAAU,qSACVW,QAAUlC,GAAML,GAAY,GAAO6B,SAAA,EAEnCC,EAAAA,EAAAA,KAACgB,EAAAA,IAAM,IAAG,YAEZnB,EAAAA,EAAAA,MAAA,UACEW,KAAK,SACLV,UAAU,gSACVW,QAAUlC,GA1ICD,WACvBC,EAAEC,iBACF,IACE,MAAMC,QAAiBC,EAAAA,EAAMuC,OAAO,cAAgB9C,GACpD+C,EAAAA,GAAMC,QAAQ1C,EAASG,KAAKwC,QAAS,CACnCC,KAAMC,IAAA,IAAC,MAAEC,EAAK,KAAEf,GAAMc,EAAA,OAAKtB,EAAAA,EAAAA,KAACwB,EAAAA,IAAO,GAAG,IAExCjE,EAAc,GAChB,CAAE,MAAOuB,GACPd,EAASc,EACX,GAgI4B2C,CAAiBlD,GAAGwB,SAAA,EAEpCC,EAAAA,EAAAA,KAACwB,EAAAA,IAAO,IAAG,gBAIf,GAES,OAAVlE,QAAU,IAAVA,GAAAA,EAAYqD,SAAW1C,GACtB4B,EAAAA,EAAAA,MAAA,UACEW,KAAK,SACLV,UAAU,sSACVW,QAAUlC,GA7LAD,WACpBC,EAAEC,iBAEF,MAAMkD,EAAUpE,EAAWsC,KAAK+B,IACvB,CAAEzC,QAASyC,EAAE9C,IAAKQ,QAASsC,EAAEtC,YAEtC,IAEE,MAAMZ,QAAiBC,EAAAA,EAAMkD,KAC1B,eAAcnE,KAASE,KAAQE,IAChC,CAAEJ,QAAOE,OAAME,OAAMP,WAAYoE,IAEnCR,EAAAA,GAAMC,QAAQ1C,EAASG,KAAKwC,SAC5BlD,GAAY,GACZF,EAAS,IACTK,EAAgBE,EAClB,CAAE,MAAOO,GAEP,GAA6B,OAAtB,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKL,SAASM,QAAgB,CAChC,MAAM2C,EAAUpE,EAAWsC,KAAK+B,IACvB,CAAEzC,QAASyC,EAAEzC,QAAQL,IAAKQ,QAASsC,EAAEtC,YAE9C,IAEE,MAAMZ,QAAiBC,EAAAA,EAAMmD,MAC1B,eAAcpE,KAASE,KAAQE,IAChC,CAAEM,KAAIV,QAAOE,OAAME,OAAMP,WAAYoE,IAEvCR,EAAAA,GAAMC,QAAQ1C,EAASG,KAAKwC,SAC5BlD,GAAY,GACZF,EAAS,IACTK,EAAgBE,EAClB,CAAE,MAAOO,GACPd,EAASc,EACX,CACF,MAAOd,EAASc,EAClB,GAyJ0BgD,CAAcvD,GAAGwB,SAAA,EAEjCC,EAAAA,EAAAA,KAAC+B,EAAAA,IAAM,IAAG,WAGZ,UAID,C","sources":["Components/Queries/Attendance.js"],"sourcesContent":["import { useState, useContext } from \"react\";\r\nimport axios from \"../../config/api/axios\";\r\nimport UserContext from \"../../Hooks/UserContext\";\r\nimport { FaPlus, FaEdit, FaTrash } from \"react-icons/fa\";\r\nimport { toast } from \"react-toastify\";\r\nimport { TableHeader, RowWithCheckbox } from \"../Table\";\r\nimport ErrorStrip from \"../ErrorStrip\";\r\n\r\nconst Attendance = () => {\r\n  const { paperList } = useContext(UserContext);\r\n  const [attendance, setAttendance] = useState([]);\r\n  const [paper, setPaper] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [hour, setHour] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [id, setId] = useState(\"\");\r\n\r\n  // fetching Attendance\r\n  const fetchAttendance = async (e) => {\r\n    setAttendance([]);\r\n    setError(\"\");\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    try {\r\n      const response = await axios.get(`/attendance/${paper}/${date}/${hour}`);\r\n      // saving the record ID for Updating/Deleting record\r\n      setId(response.data._id);\r\n      setAttendance(response.data.attendance);\r\n      setDisabled(true);\r\n    } catch (err) {\r\n      setError(err);\r\n      // in case no attendance record exists\r\n      if (err.response.status === 404) {\r\n        const response = await axios.get(\"paper/\" + paper);\r\n        // students list is fetched and mapped to add \"present\" value\r\n        const students = response.data.students;\r\n        students.forEach((student) => {\r\n          Object.assign(student, { present: true });\r\n        });\r\n        setAttendance(students);\r\n        setDisabled(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  // adding new attendance and updating existing attendance record\r\n  const addAttendance = async (e) => {\r\n    e.preventDefault();\r\n    // removing student names from data since only studentId is stored in database\r\n    const newData = attendance.map((i) => {\r\n      return { student: i._id, present: i.present };\r\n    });\r\n    try {\r\n      // adding a new attendance record\r\n      const response = await axios.post(\r\n        `/attendance/${paper}/${date}/${hour}`,\r\n        { paper, date, hour, attendance: newData }\r\n      );\r\n      toast.success(response.data.message);\r\n      setDisabled(true);\r\n      setError(\"\");\r\n      fetchAttendance(e);\r\n    } catch (err) {\r\n      // conflict, attendance record already exists\r\n      if (err?.response.status === 409) {\r\n        const newData = attendance.map((i) => {\r\n          return { student: i.student._id, present: i.present };\r\n        });\r\n        try {\r\n          // updating the old attendance record\r\n          const response = await axios.patch(\r\n            `/attendance/${paper}/${date}/${hour}`,\r\n            { id, paper, date, hour, attendance: newData }\r\n          );\r\n          toast.success(response.data.message);\r\n          setDisabled(true);\r\n          setError(\"\");\r\n          fetchAttendance(e);\r\n        } catch (err) {\r\n          setError(err);\r\n        }\r\n      } else setError(err);\r\n    }\r\n  };\r\n\r\n  const deleteAttendance = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.delete(\"attendance/\" + id);\r\n      toast.success(response.data.message, {\r\n        icon: ({ theme, type }) => <FaTrash />,\r\n      });\r\n      setAttendance([]);\r\n    } catch (err) {\r\n      setError(err);\r\n    }\r\n  };\r\n\r\n  // updating attendance state on \"onChange\" event.\r\n  const handleFormChange = (e) => {\r\n    // the whole thing is a convoluted mess, but it works.\r\n    // if you have an alternative, DM ;).\r\n    const index = parseInt(e.target.id);\r\n    const newStudent = attendance[index];\r\n    newStudent.present = !newStudent.present;\r\n    const newAttendance = attendance.map((student, index) => {\r\n      if (index === parseInt(e.target.id)) return student;\r\n      else return student;\r\n    });\r\n    setAttendance(newAttendance);\r\n  };\r\n\r\n  return (\r\n    <main className=\"attendance\">\r\n      <h2 className=\"mb-2 mt-3 whitespace-break-spaces text-4xl font-bold text-violet-950 underline decoration-inherit decoration-2 underline-offset-4 dark:mt-0 dark:text-slate-400 md:text-6xl\">\r\n        Attendance\r\n      </h2>\r\n      <section className=\"attendance__head\">\r\n        <form className=\"w-full gap-4 accent-violet-900 md:flex \">\r\n          <div className=\"flex w-full flex-col\">\r\n            <label className=\"m-1\" htmlFor=\"paper\">\r\n              Select Paper\r\n            </label>\r\n            <select\r\n              className=\"mb-4 block h-10  rounded-md border-[1.5px] border-solid border-slate-400 p-1 pl-2 outline-none selection:border-slate-200 focus:border-violet-900 dark:border-slate-200 dark:caret-inherit dark:focus:border-violet-400 dark:active:border-violet-400 \"\r\n              name=\"paper\"\r\n              id=\"paper\"\r\n              value={paper}\r\n              required\r\n              onChange={(e) => setPaper(e.target.value)}\r\n            >\r\n              <option defaultValue hidden>\r\n                ---\r\n              </option>\r\n              {paperList.map((paper, index) => (\r\n                <option key={index} value={paper._id}>\r\n                  {paper.paper}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"flex w-full flex-col\">\r\n            <label className=\"m-1\" htmlFor=\"date\">\r\n              Select Date\r\n            </label>\r\n            <input\r\n              className=\"mb-4 block h-10 w-full rounded-md border-[1.5px] border-solid border-slate-400 p-1 pl-2 outline-none selection:border-slate-200 focus:border-violet-900 dark:border-slate-200 dark:caret-inherit dark:focus:border-violet-400 dark:active:border-violet-400\"\r\n              id=\"date\"\r\n              type=\"date\"\r\n              name=\"date\"\r\n              value={date}\r\n              onChange={(e) => setDate(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"flex w-full flex-col\">\r\n            <label className=\"m-1\" htmlFor=\"hour\">\r\n              Select Hour\r\n            </label>\r\n\r\n            <select\r\n              className=\"mb-4 h-10 w-full rounded-md border-[1.5px] border-solid border-slate-400 p-1 pl-2 outline-none selection:border-slate-200 focus:border-violet-900 dark:border-slate-200 dark:caret-inherit dark:focus:border-violet-400 dark:active:border-violet-400\"\r\n              name=\"hour\"\r\n              id=\"hour\"\r\n              value={hour}\r\n              required\r\n              onChange={(e) => setHour(e.target.value)}\r\n            >\r\n              <option defaultValue hidden>\r\n                ---\r\n              </option>\r\n              <option value=\"1\">I</option>\r\n              <option value=\"2\">II</option>\r\n              <option value=\"3\">III</option>\r\n              <option value=\"4\">IV</option>\r\n              <option value=\"5\">V</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"flex items-end\">\r\n            <button\r\n              className=\" mb-4 h-10 rounded-md border-[1.5px] border-solid border-violet-900 bg-slate-800 px-8 py-2 font-semibold tracking-wide text-slate-200 hover:bg-violet-900 focus:bg-violet-900 disabled:cursor-not-allowed dark:border-violet-300 dark:bg-violet-900 dark:text-violet-100 dark:hover:bg-slate-900 md:w-auto\"\r\n              type=\"submit\"\r\n              onClick={(e) => fetchAttendance(e)}\r\n            >\r\n              Fetch\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n      <div>{error ? <ErrorStrip error={error} /> : \"\"}</div>\r\n      <section className=\"attendance__form\">\r\n        <form className=\"w-full\">\r\n          {attendance?.length ? (\r\n            <div className=\"my-4 w-full rounded-md border-2 border-slate-900 dark:border-slate-500 dark:p-[1px] lg:w-1/2\">\r\n              <table className=\"w-full\">\r\n                <TableHeader Headers={[\"Present\", \"Student\"]} />\r\n                <tbody>\r\n                  {attendance?.map((student, index) => (\r\n                    <RowWithCheckbox\r\n                      key={index}\r\n                      keys={index}\r\n                      disabled={disabled}\r\n                      value={student}\r\n                      handleFormChange={handleFormChange}\r\n                    />\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {attendance.length && disabled ? (\r\n            <div className=\"flex gap-4\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"mb-4 flex h-10 w-auto items-center gap-2 rounded-md border-[1.5px] border-solid border-violet-900 bg-slate-800 px-6 py-2 font-semibold tracking-wide text-slate-200 hover:bg-violet-900 focus:bg-violet-900 dark:border-violet-300 dark:bg-violet-900 dark:text-violet-100 dark:hover:bg-slate-900\"\r\n                onClick={(e) => setDisabled(false)}\r\n              >\r\n                <FaEdit /> Edit\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"mb-4 flex h-10 w-auto items-center gap-2 rounded-md border-[1.5px] border-solid border-violet-900 bg-slate-800 px-4 py-2 font-semibold tracking-wide text-slate-200 hover:bg-red-700 focus:bg-violet-900 dark:border-violet-300 dark:bg-violet-900 dark:text-violet-100 dark:hover:bg-red-700\"\r\n                onClick={(e) => deleteAttendance(e)}\r\n              >\r\n                <FaTrash /> Delete\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {attendance?.length && !disabled ? (\r\n            <button\r\n              type=\"submit\"\r\n              className=\"mb-4 flex h-10 w-auto items-center gap-2 rounded-md border-[1.5px] border-solid border-violet-900 bg-slate-800 px-4 py-2 font-semibold tracking-wide text-slate-200 hover:bg-violet-900 focus:bg-violet-900 dark:border-violet-300 dark:bg-violet-900 dark:text-violet-100 dark:hover:bg-slate-900 \"\r\n              onClick={(e) => addAttendance(e)}\r\n            >\r\n              <FaPlus /> Save\r\n            </button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </form>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\nexport default Attendance;\r\n"],"names":["Attendance","paperList","useContext","UserContext","attendance","setAttendance","useState","paper","setPaper","date","setDate","hour","setHour","error","setError","disabled","setDisabled","id","setId","fetchAttendance","async","e","preventDefault","response","axios","get","data","_id","err","status","students","forEach","student","Object","assign","present","handleFormChange","index","parseInt","target","newStudent","newAttendance","map","_jsxs","className","children","_jsx","htmlFor","name","value","required","onChange","defaultValue","hidden","type","onClick","ErrorStrip","length","TableHeader","Headers","RowWithCheckbox","keys","FaEdit","delete","toast","success","message","icon","_ref","theme","FaTrash","deleteAttendance","newData","i","post","patch","addAttendance","FaPlus"],"sourceRoot":""}